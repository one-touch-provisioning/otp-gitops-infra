apiVersion: batch/v1
kind: Job
metadata:
  name: enable-odf-console-plugin
  annotations:
    argocd.argoproj.io/sync-wave: "115"
    argocd.argoproj.io/hook: "PostSync"
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  namespace: {{ .Values.argo.namespace | default "openshift-gitops" }}
spec:
  template:
    spec:
      containers:
      - name: enable-odf-console-plugin
        env:
          - name: PLUGIN_NAME
            value: 'odf-console'
        command:
            - /bin/bash
            - -c
            - |
              echo "Attempting to enable ${PLUGIN_NAME} plugin"
              echo ""

              # Create the plugins section on the object if it doesn't exist
              if [ -z $(oc get consoles.operator.openshift.io cluster -o=jsonpath='{.spec.plugins}') ]; then
                echo "Creating plugins object"
                oc patch consoles.operator.openshift.io cluster --patch '{ "spec": { "plugins": [] } }' --type=merge
              fi
              INSTALLED_PLUGINS=$(oc get consoles.operator.openshift.io cluster -o=jsonpath='{.spec.plugins}')
              echo "Current plugins:"
              echo ${INSTALLED_PLUGINS}
              if [[ "${INSTALLED_PLUGINS}" == *"${PLUGIN_NAME}"* ]]; then
                  echo "${PLUGIN_NAME} is already enabled"
              else
                  echo "Enabling plugin: ${PLUGIN_NAME}"
                  oc patch consoles.operator.openshift.io cluster --type=json --patch '[{"op": "add", "path": "/spec/plugins/-", "value": "'${PLUGIN_NAME}'"}]'
              fi
        image: quay.io/openshift/origin-cli:latest
        resources:
            requests:
              cpu: "250m"
              memory: "64Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
      serviceAccount: {{ .Values.argo.serviceAccount | default "openshift-gitops-otp-argocd-application-controller" }}
      serviceAccountName: {{ .Values.argo.serviceAccount | default "openshift-gitops-otp-argocd-application-controller" }}
      restartPolicy: Never
  backoffLimit: 4